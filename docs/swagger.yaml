definitions:
  request.CreateUser:
    properties:
      email:
        maxLength: 255
        type: string
      name:
        maxLength: 60
        minLength: 2
        type: string
      password:
        minLength: 6
        type: string
      phone:
        maxLength: 60
        minLength: 6
        type: string
    required:
    - email
    - name
    - password
    type: object
  request.EmailConfirmRequest:
    properties:
      code:
        type: string
      email:
        maxLength: 255
        type: string
      target:
        enum:
        - email
        - phone
        type: string
    required:
    - code
    - email
    - target
    type: object
  request.LoginRequest:
    properties:
      email:
        maxLength: 255
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  request.RegisterRequest:
    properties:
      email:
        maxLength: 255
        type: string
      name:
        maxLength: 60
        minLength: 2
        type: string
      password:
        minLength: 6
        type: string
      phone:
        maxLength: 60
        minLength: 6
        type: string
    required:
    - email
    - name
    - password
    type: object
  request.UpdateUser:
    properties:
      name:
        maxLength: 60
        minLength: 2
        type: string
      phone:
        maxLength: 60
        minLength: 6
        type: string
    required:
    - name
    type: object
  response.AccessToken:
    properties:
      access_token:
        type: string
      email:
        type: string
      id:
        type: integer
    type: object
  response.ErrorResponse:
    properties:
      message:
        type: string
    type: object
  response.UserResponse:
    properties:
      created_at:
        type: string
      deleted_at:
        type: string
      email:
        type: string
      email_confirmed_at:
        type: string
      id:
        type: integer
      name:
        type: string
      phone:
        type: string
      updated_at:
        type: string
    type: object
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
paths:
  /auth/confirm/email:
    post:
      consumes:
      - application/json
      parameters:
      - description: Credential
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/request.EmailConfirmRequest'
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Email|Phone confirmation
      tags:
      - auth
  /auth/confirm/phone:
    post:
      consumes:
      - application/json
      parameters:
      - description: Credential
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/request.EmailConfirmRequest'
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Email|Phone confirmation
      tags:
      - auth
  /auth/signin:
    post:
      consumes:
      - application/json
      parameters:
      - description: Credential
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/request.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.AccessToken'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Sign In
      tags:
      - auth
  /auth/signup:
    post:
      consumes:
      - application/json
      parameters:
      - description: Credential
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/request.RegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/response.UserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Sign Up
      tags:
      - auth
  /auth/user:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.UserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Current user
      tags:
      - auth
  /users:
    get:
      consumes:
      - application/json
      parameters:
      - description: Limit pagination
        in: query
        name: limit
        type: integer
      - description: Page pagination
        in: query
        name: skip
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/response.UserResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get Users
      tags:
      - users
    post:
      consumes:
      - application/json
      parameters:
      - description: User ID
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/request.CreateUser'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/response.UserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Create User
      tags:
      - users
  /users/{user_id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: User ID
        in: path
        name: user_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete user
      tags:
      - users
    get:
      consumes:
      - application/json
      parameters:
      - description: User ID
        in: path
        name: user_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.UserResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get user by id
      tags:
      - users
    put:
      consumes:
      - application/json
      parameters:
      - description: User ID
        in: path
        name: user_id
        required: true
        type: integer
      - description: User ID
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/request.UpdateUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.UserResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Update user
      tags:
      - users
  /users/health:
    get:
      consumes:
      - '*/*'
      description: User Health Check
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: User Health Check
      tags:
      - users
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
